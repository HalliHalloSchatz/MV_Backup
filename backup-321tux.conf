
# WICHTIG: alle Pfadangaben müssen _ohne_ abschließenden Slash (/) angegeben werden!

 DEFMOUNT="/media/truecrypt1"
DEFDELDIR=default

############################### KONFIGURATION DER PROFILE ###############################

# title[n]     Bezeichnung des Profils; wird u.a. in der Hilfe angezeigt
#
# arg[n]       Argument, mit dem das jeweilige Profil gestartet wird (-p arg[n])
#
# source[n]    Quellverzeichnis(se) (abschließender Slash optional möglich)
#              WICHTIG: Pfadangaben, die Leerzeichen enthalten, müssen von \" umschlossen werden!
#                       Z.B. \"/Verzeichnis mit Leerzeichen/\"
#
# mount[n]     [optional] Einhängepunkt der externen Festplatte
#              vor dem Backup wird überprüft, ob die externe Festplatte eingebunden ist
#
# deldir[n]    Ordner, in den gelöschte Dateien kopiert werden
#              (die Variable $TARGET, in der das Zielverzeichnis gespeichert ist, ist hierbei nützlich)
#
# target[n]    Zielverzeichnis
#
# log[n]       [optional] Logdatei, in der die Ausgabe von rsync gespeichert wird
#
# exfrom[n]    temporäre Datei (Standard: $(mktemp -t "tmp.rsync.XXXX")); muss nicht geändert werden
#
# rsync_opt[n] [optional] Optionen für rsync, wenn nicht die Optionen aus $RSYNC_OPT (s.o.) verwendet werden sollen
#
# cat > "${exfrom[1]}" <<EOF       Dateien und Verzeichnisse, die von der Sicherung ausgeschlossen werden sollen
#              pro Zeile 1 Pfad; Pfadangaben mit Leerzeichen müssen nicht gesondert behandelt werden

n=0 # Counter für Profile

# = = Profil 1  = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        let n=n+1
            D=/srv/Archiv
    title[$n]="Nightly"
      arg[$n]="n"
     mode[$n]="snapshot"
    mount[$n]=""
   source[$n]="$D/Audio $D/Backups $D/Bilder $D/Dokumente $D/Software $D/Videos"
   target[$n]="/srv/Archiv/.backup"
      log[$n]="${target[$n]}/.log/${title[$n]}-log.txt"
   exfrom[$n]="$(mktemp -t "tmp.rsync.XXXX")"
   deldir[$n]=""
rsync_opt[$n]=""
cat > "${exfrom[$n]}" <<__EOF__
*cache*
desktop.ini
Desktop.ini
thumbs.db
Thumbs.DB
*.bak
*.tmp
*/tmp/*
*/Tmp/*
__EOF__

# = = Profil 1  = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        let n=n+1
    title[$n]="Test"
      arg[$n]="t"
     mode[$n]="snapshot"
    mount[$n]=""
   source[$n]="/home/sudp/.rhtmp/source"
   target[$n]="/home/sudp/.rhtmp/backup"
      log[$n]="${target[$n]}/log/${title[$n]}-log.txt"
   exfrom[$n]="$(mktemp -t "tmp.rsync.XXXX")"
   deldir[$n]=""
rsync_opt[$n]=""
cat > "${exfrom[$n]}" <<__EOF__
desktop.ini
Desktop.ini
thumbs.db
Thumbs.DB
*.bak
*.tmp
*/tmp/*
*/Tmp/*
__EOF__

# = = Profil 2 (optional) = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
     let n=n+1
 title[$n]="Home"
   arg[$n]="h"
  mode[$n]="snapshot"
source[$n]="~/Dokumente"
target[$n]="~/.backup"
   log[$n]="${target[$n]}/${title[$n]}_log.txt"
exfrom[$n]=$exfrom[1]]

# = = Vorlage für neues Profil (am Besten kopieren)  = = = = = = = = = = = = = = = = = = =
#      let n=n+1
#  title[$n]=""
#    arg[$n]=""
# source[$n]=""
# target[$n]=""
#    log[$n]="${target[$n]}/${title[$n]}_log.txt"
# exfrom[$n]="$(mktemp -t "tmp.rsync.XXXX")"
# cat > "${exfrom[$n]}" <<EOF
#
# EOF

################################ ENDE DER KONFIGURATION #################################
